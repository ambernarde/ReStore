{"version":3,"sources":["app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/models/pagination.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Order.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getcookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","console","log","meta","arg","fulfilled","itemIndex","items","findIndex","i","undefined","splice","rejected","addMatcher","isAnyOf","actions","signUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","erro","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","metaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductsParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","PaginatedResponse","this","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","Promise","reject","requests","url","then","body","post","delete","id","TestErros","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErros","setValidationErros","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductsCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOption","selectAll","useEffect","columnSpacing","Paper","mb","p","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","Divider","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useHistory","location","useLocation","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","pathname","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","usarname","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","roles","render","props","OrderDetailed","order","setSelectedOrder","ordemItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","multiline","rows","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","currentValidationSchema","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","hideProgressBar","CssBaseline","Order","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60cb73e6.chunk.js","sourcesContent":["export function getcookie (key:string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b? b.pop(): \"\";\r\n}\r\n\r\nexport function currencyFormat(amount:number){\r\n    return '$' + (amount/100).toFixed(2);\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Basket } from \"../../app/models/basket\";\r\nimport { getcookie } from \"../../app/util/util\";\r\n\r\n\r\ninterface BasketState {\r\n    basket : Basket | null;\r\n    status: string;\r\n}\r\n\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status:'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_ ,  thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get(); \r\n        }\r\n        catch(error: any) {\r\n            return thunkAPI.rejectWithValue({error:error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if(!getcookie('buyerId')) return false;\r\n        }\r\n    }\r\n) \r\n\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket,{productId:number , quantity?: number}>(\r\n    'basket/addBasketItemAsync',\r\n    async({productId, quantity=1},thunkAPI) => {\r\n        try {\r\n               return await agent.Basket.addItem(productId,quantity);\r\n        }\r\n        catch(error: any){\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void,\r\n  {productId: number, quantity: number, name?: string}>(\r\n    'basket/removeBasketItemAsycn',\r\n    async ({productId, quantity},thunkAPI) => {\r\n        try {\r\n              await agent.Basket.removeItem(productId,quantity);        }\r\n        catch(error:any){\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n\r\n)\r\n\r\nexport const basketSlice = createSlice ({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state,action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket : (state => {\r\n            state.basket = null;\r\n        })\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state,action) => {\r\n            console.log(action);\r\n            state.status = 'pendingAddItem'+ action.meta.arg.productId;\r\n        });\r\n  \r\n        builder.addCase(removeBasketItemAsync.pending,(state,action) => {\r\n             state.status = 'pendingRemoveItem' +action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.fulfilled,(state,action) => {\r\n            const{productId, quantity} = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if(itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -=  quantity!;\r\n            if(state.basket?.items[itemIndex].quantity === 0)\r\n                    state.basket.items.splice(itemIndex,1);\r\n                    state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected,(state,action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state,action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state,action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n        \r\n    })\r\n  \r\n})\r\n\r\nexport const {setBasket,clearBasket } = basketSlice.actions;\r\n\r\n","import { toast } from 'react-toastify';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\r\nimport { User } from \"../../app/models/user\";\r\nimport agent from '../../app/api/agent';\r\nimport { history } from \"../..\";\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\n\r\nconst initialState : AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n   async (data , thunkAPI) => {\r\n       try {\r\n             const userDto = await agent.Account.login(data);\r\n             const {basket,...user} = userDto;\r\n             if(basket) thunkAPI.dispatch(setBasket(basket));\r\n             localStorage.setItem('user',JSON.stringify(user));\r\n             return user;\r\n       } catch (error : any) {\r\n           return thunkAPI.rejectWithValue({erro: error.data});\r\n       }\r\n   }\r\n)\r\n\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n   async (_ , thunkAPI) => {\r\n       thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n       try {\r\n             const userDto = await agent.Account.currentUser();\r\n             const {basket ,...user} = userDto;\r\n             if (basket) thunkAPI.dispatch(setBasket(basket));\r\n             localStorage.setItem('user',JSON.stringify(user));\r\n             return user;\r\n       } catch (error : any) {\r\n           return thunkAPI.rejectWithValue({erro: error.data});\r\n       }\r\n   },\r\n   {\r\n       condition: () => {\r\n           if(!localStorage.getItem('user')) return false;\r\n       }\r\n   }\r\n)\r\n\r\n\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser : (state,action) => {\r\n             state.user = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired- please login again');\r\n            \r\n        })\r\n       builder.addMatcher(isAnyOf(signUser.fulfilled, fetchCurrentUser.fulfilled), (state,action) => {\r\n          state.user = action.payload; \r\n       });\r\n       builder.addMatcher(isAnyOf(signUser.rejected, fetchCurrentUser.rejected), (state,action) => {\r\n         throw action.payload;\r\n     });\r\n    })\r\n})\r\n\r\nexport const {signOut,setUser} = accountSlice.actions;","import { MetaData } from './../../app/models/pagination';\r\nimport { RootState } from './../../app/store/configureStore';\r\nimport {createAsyncThunk, createEntityAdapter , createSlice } from \"@reduxjs/toolkit\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\n\r\n\r\ninterface CatalogState {\r\n    productsLoaded : boolean;\r\n    filtersLoaded : boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types:string[];\r\n    productParams: ProductParams;\r\n    metaData : MetaData | null;\r\n\r\n}\r\n\r\nconst productsAdapter  = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams){\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber',productParams.pageNumber.toString());\r\n    params.append('pageSize',productParams.pageSize.toString());\r\n    params.append('orderBy',productParams.orderBy);\r\n    if(productParams.searchTerm) params.append('searchTerm',productParams.searchTerm);\r\n    if(productParams.brands.length > 0) params.append('brands',productParams.brands.toString());\r\n    if(productParams.types.length > 0) params.append('types',productParams.types.toString());\r\n    return params;    \r\n    \r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[],void,{state:RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_,thunkAPI) => {    \r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);    \r\n        try {\r\n            const response =  await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(response.metaData));\r\n            return response.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    }\r\n)\r\n\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async  (_,thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.fetchFilters();\r\n        } \r\n        catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data});\r\n        }\r\n        \r\n    }\r\n)\r\n\r\nfunction initParams(){\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy : 'name',\r\n        brands:[],\r\n        types:[]\r\n    }\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name:'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded : false,\r\n        filtersLoaded: false,\r\n        status:'idle',\r\n        brands:[],\r\n        types:[],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers:{\r\n        setProductParams: (state,action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber:1};\r\n        },\r\n        setPageNumber: (state,action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams,...action.payload};\r\n        },\r\n        setMetaData:(state,action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductsParams: (state) => {\r\n             state.productParams = initParams();  \r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state,action) =>{\r\n            state.brands        = action.payload.brands;\r\n            state.types         = action.payload.types;\r\n            state.filtersLoaded = true;\r\n        }) ; \r\n        builder.addCase(fetchFilters.rejected, (state,action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        }) \r\n    })\r\n})\r\n\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const {setProductParams,resetProductsParams,setMetaData,setPageNumber} = catalogSlice.actions;","import { createSlice } from \"@reduxjs/toolkit\"\r\nimport { CounterState } from \"./counterReducer\"\r\n\r\nexport interface ConterState{\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data:42,\r\n    title:'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState ,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {increment,decrement} = counterSlice.actions;","import { accountSlice } from './../../features/account/accountSlice';\r\nimport { catalogSlice } from './../../features/catalog/catalogSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { TypedUseSelectorHook, useDispatch } from 'react-redux';\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\nimport { basketSlice } from '../../features/basket/basketSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        counter: counterSlice.reducer,\r\n        basket:  basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account : accountSlice.reducer\r\n\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector : TypedUseSelectorHook<RootState> = useSelector;","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData){\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","import { store } from './../store/configureStore';\r\nimport { PaginatedResponse } from './../models/pagination';\r\nimport  axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve,500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if(token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    \r\n    if(process.env.NODE_ENV === 'development')  await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination){\r\n        response.data = new PaginatedResponse(response.data,JSON.parse(pagination));\r\n        console.log(response);\r\n        return response;\r\n    }\r\n    if(pagination){\r\n        response.data = new PaginatedResponse(response.data,JSON.parse(pagination))\r\n    }\r\n    \r\n    return response\r\n},(error: AxiosError) => {\r\n    const {data,status} = error.response!;\r\n    switch (status) {\r\n     case 400:\r\n         if(data.errors){\r\n             const modelStateErrors : string[] = [];\r\n             for(const key in data.errors){\r\n                 if(data.errors[key]){\r\n                     modelStateErrors.push(data.errors[key])\r\n                 }\r\n             }\r\n             throw modelStateErrors.flat();\r\n         }\r\n         toast.error(data.title);\r\n         break;\r\n     case 401:\r\n         toast.error(data.title);\r\n         break;\r\n     case 500:\r\n         toast.error(data.title);\r\n         break; \r\n         default:\r\n              break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\n\r\n\r\n\r\nconst requests = {\r\n    get: (url: string,params?: URLSearchParams) => axios.get(url,{params}).then(responseBody),\r\n    post: (url: string, body:{}) => axios.post(url,body).then(responseBody),\r\n    put: (url: string,body:{})   => axios.put(url,body).then(responseBody),\r\n    delete: (url: string)        => axios.delete(url).then(responseBody),    \r\n}\r\n\r\nconst Catalog ={\r\n    list: (params: URLSearchParams)  => requests.get('products',params),\r\n    details:(id: number) => requests.get(`products/${id}`),\r\n    fetchFilters:() => requests.get('products/filters')\r\n}\r\n\r\nconst TestErros ={\r\n    get400Error:() => requests.get('buggy/bad-request'),\r\n    get401Error:() => requests.get('buggy/unauthorised'),\r\n    get404Error:() => requests.get('buggy/not-found'),\r\n    get500Error:() => requests.get('buggy/server-error'),\r\n    getValidationError:() => requests.get('buggy/validation-error'),    \r\n}\r\n\r\nconst Basket ={\r\n    get:() => requests.get('basket'),\r\n    addItem:(productId: number , quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`,{}),\r\n    removeItem:(productId: number , quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account ={\r\n    login : (values:any) => requests.post('account/login', values),\r\n    register :(values: any)  => requests.post('account/register', values),\r\n    currentUser : () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress')\r\n}\r\n\r\nconst Orders = {\r\n    list:() => requests.get('orders'),\r\n    fetch:(id: number) => requests.get(`orders/${id}`),\r\n    create:(values:any) => requests.post('orders',values)\r\n}\r\n\r\nconst Payments = {\r\n    createPaymentIntent : () => requests.post('payments',{})\r\n}\r\n\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErros,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n}\r\n\r\nexport default agent;","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage(){\r\n    const[validationErros, setValidationErros] = useState<string[]>([]);\r\n    \r\n    function getValidationError(){\r\n        agent.TestErros.getValidationError()\r\n        .then(() => console.log('should not see this'))\r\n        .catch(error => setValidationErros(error))\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2' >Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained'\r\n                 onClick={() => agent.TestErros.get400Error().catch(error => console.log(error))}>\r\n                     Test 400 Error</Button>\r\n                <Button variant='contained' \r\n                onClick={() => agent.TestErros.get401Error().catch(error => console.log(error))}>\r\n                    Test 401 Error</Button>\r\n                <Button variant='contained'\r\n                 onClick={() => agent.TestErros.get404Error().catch(error => console.log(error))}>\r\n                     Test 404 Error</Button>\r\n                <Button variant='contained' \r\n                onClick={() => agent.TestErros.get500Error().catch(error => console.log(error))}>\r\n                    Test 500 Error</Button>\r\n                <Button variant='contained'\r\n                 onClick={getValidationError}>\r\n                     Test Validation Error\r\n                </Button>                \r\n            </ButtonGroup>\r\n            {validationErros.length > 0 && \r\n              <Alert severity='error'>\r\n                  <AlertTitle>Validation Errors</AlertTitle>            \r\n              <List>\r\n                  {validationErros.map(error => (\r\n                      <ListItem key={error}>\r\n                         <ListItemText>\r\n                             {error}\r\n                         </ListItemText>\r\n                      </ListItem>\r\n                  ))}\r\n              </List>\r\n              </Alert>\r\n            }\r\n        </Container>\r\n\r\n    )\r\n}","import { Box, Typography, Pagination } from \"@mui/material\";\r\nimport { MetaData } from \"../models/pagination\";\r\n\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props){\r\n    const {currentPage,totalCount,totalPages,pageSize} = metaData;\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center' >\r\n        <Typography>\r\n           Displaying {(currentPage-1)*pageSize+1}-\r\n           {currentPage*pageSize > totalCount \r\n           ? totalCount\r\n            : currentPage*pageSize} of {totalCount} items\r\n          </Typography> \r\n          <Pagination \r\n             color='secondary'\r\n             size='large'\r\n             count={totalPages}\r\n             page={currentPage} \r\n             onChange={(e,page) => onPageChange(page)}                  \r\n          />                 \r\n     </Box> \r\n    )\r\n}","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked?: string[];\r\n    onChange: (items:string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons ({items,checked,onChange}: Props) {\r\n    const [checkedItems,setCheckedItems] = useState(checked || []);\r\n\r\nfunction handleChecked(value: string){\r\n    const currentIndex = checkedItems.findIndex(item => item === value);\r\n    let newChecked : string[] = [];\r\n    if(currentIndex === -1) newChecked = [...checkedItems,value];\r\n    else newChecked = checkedItems.filter(item => item !== value);\r\n    setCheckedItems(newChecked);\r\n    onChange(newChecked);\r\n}\r\n\r\n    return (\r\n        <FormGroup>\r\n                {items.map(item => (\r\n                    <FormControlLabel \r\n                    control={<Checkbox \r\n                        checked={checkedItems.indexOf(item) !== -1}\r\n                        onClick={() => handleChecked(item)}\r\n                        />} \r\n                    label={item} key={item} />\r\n                ))} \r\n        </FormGroup>\r\n    )\r\n}\r\n\r\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\r\n\r\ninterface Props  {\r\n    options: any[];\r\n    onChange : (event:any) => void;\r\n    selectedValue: string;\r\n    \r\n}\r\n\r\nexport default function RadioButtonGroup ({options, onChange,selectedValue}: Props) {\r\n    return (\r\n        <FormControl component={\"fieldset\"}>\r\n        <RadioGroup onChange={onChange} value={selectedValue} >\r\n          {options.map(({value, label}) => (\r\n                <FormControlLabel value={value} control={<Radio />} label={label}  key={value}/>   \r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n\r\n    )\r\n}","import { Backdrop,Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n    message?: string;\r\n}\r\n\r\nexport default function LoadingComponent({message ='Loading...'}: Props){\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n             <Box display='flex' justifyContent='center' alignItems='center' height='100vh' >\r\n                 <CircularProgress size={100} color='secondary'/>\r\n                       <Typography variant='h4' sx={{justifyContent:'center',position:'fixed',top:'60%'}}>\r\n                           {message}</Typography>   \r\n             </Box>  \r\n        </Backdrop>\r\n    )\r\n}","import { LoadingButton } from \"@mui/lab\";\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ninterface Props {\r\n    product : Product;\r\n}\r\n\r\nexport default function ProductsCard({product}: Props){\r\n  const {status} = useAppSelector(state => state.basket);\r\n  const dispatch = useAppDispatch();\r\n    \r\n    return (\r\n        <Card >\r\n        <CardHeader\r\n                avatar={\r\n                <Avatar sx={{bgcolor:'secondary.main'}}>\r\n                    {product.name.charAt(0).toUpperCase()}\r\n                </Avatar>\r\n            }\r\n            title={product.name}  \r\n            titleTypographyProps={{\r\n                sx: {fontWeight:'bold',color:'primary.main'}\r\n            }}          \r\n        />\r\n      <CardMedia\r\n        sx={{height:140, backgroundSize: 'contain', bgcolor:'primary.light'}}\r\n        image={product.pictureUrl}\r\n        title={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom color='secondary' variant=\"h5\">\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {product.brand} / {product.type}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton \r\n                 loading={status.includes('pending')} \r\n                 onClick={() => dispatch(addBasketItemAsync({productId: product.id}))} \r\n                 size=\"small\" >Add to cart\r\n        </LoadingButton>   \r\n            <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n      </CardActions>\r\n    </Card>         \r\n    )\r\n\r\n}","import { Grid, Card, CardHeader, Skeleton, CardContent, CardActions } from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products : Product[];\r\n}\r\n\r\n\r\nexport default function ProductList({products}: Props){\r\n    const {productsLoaded} = useAppSelector(state => state.catalog);\r\n    return (\r\n    <Grid container spacing={4}>\r\n        {products.map(product => (\r\n             <Grid item xs={4}> \r\n             {!productsLoaded ? (\r\n                 <ProductCardSkeleton/>\r\n             ): (\r\n                 <ProductCard product={product}/>\r\n             )}\r\n               {/* <ProductCard key={product.id} product={product} /> */}\r\n             </Grid>\r\n        ))}\r\n    </Grid>\r\n    )\r\n}","import { debounce, TextField } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm,setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event:any)=> {\r\n        dispatch(setProductParams({searchTerm: event.target.value}))\r\n    },1000)\r\n\r\n    return (\r\n        <TextField\r\n        label='Seach products'\r\n        variant='outlined'\r\n        fullWidth\r\n        value = {searchTerm || ''}\r\n        onChange= {(event: any) => {\r\n            setSearchTerm(event.target.value);\r\n            debouncedSearch(event);\r\n        }}\r\n      />\r\n    )  \r\n}","import {  Grid,  Paper } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport CheckboxButtons from \"../../app/components/CheckboxButtons\";\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { fetchFilters, fetchProductsAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\n\r\n\r\nconst sortOption = [\r\n  {value:'name', label:'Alphabetical'},\r\n  {value:'priceDesc', label:'Price- High to low'},\r\n  {value:'price', label:'Price -Low to high'},\r\n]\r\n\r\nexport default function Catalog() { \r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const dispatch = useAppDispatch();\r\n    const {productsLoaded,filtersLoaded,brands,types,productParams,metaData} = useAppSelector(state => state.catalog);\r\n    \r\n  \r\n      useEffect(() => {         \r\n          if(!productsLoaded) dispatch(fetchProductsAsync());          \r\n        },[productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n          if(!filtersLoaded) dispatch(fetchFilters());\r\n        },[dispatch,filtersLoaded])\r\n\r\n        if(!filtersLoaded ) return <LoadingComponent message='Loading products...'/>\r\n\r\n    return (\r\n         <Grid container columnSpacing={4}>\r\n           <Grid item xs={3}>\r\n            <Paper sx={{mb:2}}>\r\n              <ProductSearch/>              \r\n            </Paper>\r\n            <Paper sx={{mb:2 ,p: 2 }}>\r\n             <RadioButtonGroup\r\n              selectedValue= {productParams.orderBy}\r\n              options= {sortOption}\r\n              onChange={(e) => dispatch(setProductParams({orderBy: e.target.value}))}\r\n             />\r\n            </Paper>\r\n            <Paper sx={{mb:2,p:2}}>\r\n                 <CheckboxButtons\r\n                  items={brands}\r\n                  checked = {productParams.brands}\r\n                  onChange ={(items: string[]) => dispatch(setProductParams({brands:items}))} \r\n                 />\r\n            </Paper> \r\n            <Paper sx={{mb:2,p:2}}>\r\n              <CheckboxButtons\r\n                    items={types}\r\n                    checked = {productParams.types}\r\n                    onChange ={(items: string[]) => dispatch(setProductParams({types:items}))} \r\n                  />\r\n            </Paper>         \r\n           </Grid>\r\n           <Grid item xs={9}>\r\n           <ProductList products={products}/>\r\n           </Grid> \r\n           <Grid item xs={3} />\r\n           <Grid item xs={9} sx={{mb:2}} >\r\n             {metaData && \r\n           <AppPagination \r\n             metaData={metaData}\r\n             onPageChange={(page: number) => dispatch(setPageNumber({pageNumber:page}))}\r\n           />}\r\n             \r\n            </Grid>\r\n                      \r\n         </Grid>\r\n    )     \r\n    \r\n}\r\n\r\n","import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\nimport {fetchProductAsync, productSelectors} from \"./catalogSlice\";\r\n\r\n\r\nexport default function ProductDetails(){\r\n   const {basket,status} = useAppSelector(state => state.basket);\r\n   const dispatch = useAppDispatch();\r\n   const {id} = useParams<{id:string}>();\r\n   const product = useAppSelector(state => productSelectors.selectById(state,id));\r\n   const {status: productStatus} = useAppSelector(state => state.catalog);\r\n   const[quantity,setQuantity] = useState(0);\r\n   const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n   useEffect(() => {\r\n      if(item) setQuantity(item.quantity);\r\n      if(!product)dispatch(fetchProductAsync(parseInt(id)));\r\n   },[id,item,dispatch,product])\r\n\r\n  function handleInputChange(event:any){\r\n     if(event.target.value >= 0){\r\n     setQuantity(parseInt(event.target.value));\r\n     }\r\n  }\r\n\r\n  function handleUpdateCart(){\r\n     if(!item || quantity > item.quantity){\r\n        const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n        dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\r\n     }else {\r\n         const updatedQuantity = item.quantity - quantity;\r\n         dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))     }\r\n  }\r\n\r\n   if(productStatus.includes('pending')) return <LoadingComponent message='Loading product...'/>\r\n   if(!product) return <h3>Product not found</h3>\r\n\r\n    return (\r\n       <Grid container spacing={6}>\r\n             <Grid item xs={6}>\r\n                  <img src={product.pictureUrl} alt={product.name} style={{width:'100%'}} />\r\n             </Grid>\r\n             <Grid item xs={6}>\r\n                 <Typography variant='h3'>{product.name}</Typography>\r\n                 <Divider sx={{mb:2}} />\r\n                 <Typography variant='h4' color='secondary'>${(product.price/100).toFixed(2)}</Typography>\r\n                 <TableContainer>\r\n                     <Table>\r\n                         <TableBody>\r\n                             <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                             </TableRow>\r\n                             <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                             </TableRow> \r\n                             <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                             </TableRow> \r\n                             <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                             </TableRow> \r\n                             <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                             </TableRow>                                                     \r\n                         </TableBody>\r\n                     </Table>\r\n                 </TableContainer>\r\n                 <Grid container spacing={2}>\r\n                     <Grid item xs={6}> \r\n                        <TextField \r\n                           onChange={handleInputChange}\r\n                           variant='outlined'\r\n                           type='number'\r\n                           label='Quantity in Cart'\r\n                           fullWidth\r\n                           value={quantity}\r\n                        />                     \r\n                     </Grid>                 \r\n                     <Grid item xs={6}>\r\n                        <LoadingButton\r\n                        disabled={item?.quantity === quantity }\r\n                           loading={status.includes('pending')}\r\n                           onClick={handleUpdateCart}\r\n                           sx={{height:'55px'}}\r\n                           color='primary'\r\n                           size='large'\r\n                           variant='contained'\r\n                           fullWidth                       \r\n                        >\r\n                           {item ? 'Update Quantity': 'Add to Cart'}\r\n                        </LoadingButton>\r\n                     </Grid>\r\n                 </Grid>\r\n             </Grid>\r\n       </Grid>\r\n    )\r\n}","import { Button, ButtonGroup, Typography } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { decrement, increment } from \"./counterSlice\";\r\n\r\n\r\nexport default function ContactPage(){\r\n    const dispatch = useAppDispatch();\r\n    const {data,title} = useAppSelector(state => state.counter);\r\n    return (\r\n        <>\r\n        <Typography variant=\"h2\">\r\n            {title}\r\n        </Typography>\r\n        <Typography variant=\"h5\">\r\n            The data is:{data}\r\n        </Typography>\r\n        <ButtonGroup>\r\n            <Button onClick={() => dispatch(decrement(1))} variant=\"contained\" color='error'>Decrement</Button>\r\n            <Button onClick={() => dispatch(increment(1))} variant=\"contained\" color='primary'>Increment</Button>\r\n            <Button onClick={() => dispatch(increment(5))} variant=\"contained\" color='secondary'>Increment by 5</Button>\r\n        </ButtonGroup>\r\n        </>\r\n    )\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Slider from 'react-slick';\r\n\r\nexport default function HomePage(){\r\n    const settings = {\r\n       dots: true,\r\n       infinite: true,\r\n       speed:500,\r\n       slidesToShow:1,\r\n       slidesToScroll:1\r\n    };\r\n    return (\r\n        <>        \r\n        <Slider {...settings}>\r\n            <div>\r\n                <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width:'100%', maxHeight:500}} />\r\n            </div>\r\n            <div>\r\n                <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width:'100%', maxHeight:500}} />\r\n            </div>\r\n            <div>\r\n                <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width:'100%', maxHeight:500}} />\r\n            </div>\r\n        </Slider>\r\n        <Box display='flex' justifyContent='center' sx={{p:4}}>\r\n            <Typography variant='h1'>\r\n                Welcome to the shop !\r\n            </Typography>\r\n        </Box>\r\n        </>\r\n    )\r\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { signOut } from \"../../features/account/accountSlice\";\r\nimport { clearBasket } from \"../../features/basket/basketSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\n\r\nexport default function SignedInMenu (){\r\n  const dispatch = useAppDispatch();\r\n  const {user} = useAppSelector(state => state.account);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button \r\n        color='inherit'  \r\n         onClick={handleClick}\r\n         sx={{typography:'h6'}}\r\n         >\r\n        {user?.email}\r\n      </Button>\r\n      <Menu       \r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem  component={Link} to='/orders' >My orders</MenuItem>\r\n        <MenuItem onClick={() =>\r\n           {\r\n             dispatch(signOut());\r\n             dispatch(clearBasket());\r\n           }\r\n         }>Logout</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n    \r\n}","\r\nimport { ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar,  Badge,  Box,  IconButton, List, ListItem, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }\r\n]\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n     const {basket} = useAppSelector(state => state.basket);\r\n     const {user} = useAppSelector(state => state.account);\r\n     const itemCount = basket?.items.reduce((sum,item) => sum + item.quantity, 0);\r\n  \r\n    return (\r\n        <AppBar position='static'  >\r\n            <Toolbar sx={{display:'flex', justifyContent:'space-between', alignItems:'center'}} >  \r\n                   <Box display='flex'alignItems='center'>\r\n                        <Typography variant='h6' component={NavLink} \r\n                                to='/'\r\n                                exact\r\n                                sx={navStyles}>\r\n                                RE-STORE\r\n                            </Typography>\r\n                            <Switch checked={darkMode} onChange={handleThemeChange} />                       \r\n                   </Box> \r\n                <List sx={{ display: 'flex' }}>\r\n                     {midLinks.map(({title , path })=> (\r\n                        <ListItem                        \r\n                           component={NavLink}\r\n                           to={path}\r\n                           key={path}\r\n                           sx={navStyles}                        \r\n                        >\r\n                          {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n               <Box display='flex' alignItems='center' > \r\n                    <IconButton component={Link} to='/basket' size='large' sx={{color:'inherit'}}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                        <ShoppingCart/>\r\n                        </Badge>\r\n                    </IconButton>  \r\n                    {user ? (\r\n                        <SignedInMenu/>\r\n                    ): (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({title , path })=> (\r\n                                <ListItem                        \r\n                                component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyles}                        \r\n                                >\r\n                                {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                  \r\n               </Box>  \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n    const{basket} = useAppSelector(state => state.basket);\r\n    if(subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum,item) => sum + (item.quantity * item.price),0) ?? 0 ;\r\n    const deliveryFee = subtotal > 10000 ? 0: 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\"\r\nimport { LoadingButton } from \"@mui/lab\"\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\"\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeBasketItemAsync, addBasketItemAsync } from \"./basketSlice\"\r\n\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function  BasketTable ({items,isBasket=true}: Props){\r\n    \r\n    const{status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n  \r\n    return (\r\n         <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product</TableCell>\r\n                  <TableCell align=\"right\">Price</TableCell>\r\n                  <TableCell align=\"right\">Quantity</TableCell>\r\n                  <TableCell align=\"right\">Subtotal</TableCell>\r\n                  {isBasket && \r\n                  <TableCell align=\"right\"></TableCell> }\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {items.map(item => (\r\n                  <TableRow\r\n                    key={item.productId}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                  >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Box display='flex' alignItems='center'>\r\n                             <img src={item.pictureUrl} alt={item.name} style={{height:50,marginRight:20}} />\r\n                             <span>{item.name}</span>\r\n                      </Box>               \r\n                    </TableCell>\r\n                    <TableCell align=\"right\">${(item.price /100).toFixed(2)}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                       {isBasket && \r\n                       <LoadingButton \r\n                          loading={status === 'pendingRemoveItem'+ item.productId + 'rem' }\r\n                          onClick={() => dispatch(removeBasketItemAsync({\r\n                            productId: item.productId, quantity: 1 , name: 'rem'}))} \r\n                          color='error'>\r\n                          <Remove/>\r\n                       </LoadingButton> }\r\n                       {item.quantity}\r\n                       {isBasket && \r\n                       <LoadingButton \r\n                       loading={status === 'pendingAddItem'+ item.productId }\r\n                       onClick={() => dispatch(addBasketItemAsync({productId: item.productId}))} \r\n                        color='secondary'>\r\n                          <Add/>\r\n                       </LoadingButton> }\r\n                      </TableCell>\r\n                    <TableCell align=\"right\">${((item.price/ 100 ) * item.quantity).toFixed(2)}</TableCell>\r\n                    {isBasket &&\r\n                    <TableCell align=\"right\">\r\n                         <LoadingButton \r\n                            loading={status === 'pendingRemoveItem'+ item.productId + 'del' }\r\n                            onClick={() => dispatch(removeBasketItemAsync({\r\n                              productId: item.productId , quantity: item.quantity, name:'del'}))} \r\n                            color='error'>\r\n                             <Delete />\r\n                         </LoadingButton>\r\n                    </TableCell>}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n            \r\n        )\r\n}","import { Button, Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"./BasketSummary\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BasketTable from \"./BasketTable\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\n\r\n\r\nexport default function BasketPage(){\r\n const {basket} = useAppSelector(state => state.basket);\r\n\r\n if(!basket) return <Typography variant='h3' >Your basket is empty</Typography>\r\n\r\n    return (\r\n  <>\r\n     <BasketTable items={basket.items} />\r\n     <Grid container>\r\n         <Grid item xs={6} />         \r\n         <Grid item xs={6} >\r\n            <BasketSummary/>\r\n            <Button\r\n                  component={Link}\r\n                  to='/checkout'\r\n                  variant='contained'\r\n                  size='large'\r\n                  fullWidth\r\n            >\r\n             Checkout\r\n            </Button>\r\n         </Grid>       \r\n     </Grid>\r\n         </>\r\n\r\n    )\r\n}\r\n\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Link, useHistory, useLocation} from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Paper } from '@mui/material';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signUser } from './accountSlice';\r\n\r\n\r\n\r\nexport default function Login() {\r\n   const history = useHistory();\r\n   const location = useLocation<any>();\r\n   const dispatch = useAppDispatch();\r\n  const {register, handleSubmit, formState:{isSubmitting,errors, isValid}} = useForm({\r\n      mode:'all'\r\n  }) \r\n  \r\n  async function  submitForm(data: FieldValues){ \r\n    try\r\n    {\r\n        await dispatch(signUser(data));\r\n        history.push(location.state?.from?.pathname || '/catalog'); \r\n    }\r\n    catch(error : any)\r\n    {\r\n       console.log(error);\r\n    }\r\n    \r\n  }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n         sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"                      \r\n                    autoFocus\r\n                    {...register('username', {required:'Username is required'})} \r\n                    error={!!errors.username}  \r\n                    helperText={errors?.usarname?.message}            \r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth            \r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password',{required:'Password is required'})}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}                           \r\n                />  \r\n                <LoadingButton loading={isSubmitting} \r\n                   disabled={!isValid}\r\n                    type=\"submit\" \r\n                    fullWidth variant=\"contained\"\r\n                    sx={{mt:3,mb:2}}\r\n                >\r\n                Sign In\r\n                </LoadingButton>                \r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/register'>\r\n                            {\"Don't have an account? Sign Up\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, setError, formState: { isSubmitting, errors, isValid } } = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', { message: error })\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', { message: error })\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', { message: error })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\" sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - you can now login');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch(error => handleApiErrors(error))\r\n                )}\r\n                noValidate sx={{ mt: 1 }}\r\n            >\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email address\"\r\n                    {...register('email', { \r\n                        required: 'Email is required',\r\n                        pattern: {\r\n                            value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*)).[a-z]{2,3}$/,\r\n                            message: 'Not a valid email address'\r\n                        } \r\n                    })}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    {...register('password', { \r\n                        required: 'Password is required',\r\n                        pattern: {\r\n                            value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                            message: 'Password is not complex enough'\r\n                        }\r\n                    })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message}\r\n                />\r\n                <LoadingButton\r\n                    disabled={!isValid}\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item>\r\n                        <Link to='/login'>\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import { ComponentType } from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\n\r\ninterface Props extends RouteProps {\r\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n  roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\r\n  const { user } = useAppSelector(state => state.account);\r\n  return (\r\n    <Route {...rest} render={props => {\r\n      if (!user) {\r\n        return <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n      }\r\n\r\n    //   if (roles && !roles?.some(r => user.roles?.includes(r))) {\r\n    //     toast.error('Not authorised to access this area');\r\n    //     return <Redirect to={{ pathname: \"/catalog\" }} />\r\n    //   }\r\n\r\n      return <Component {...props} />\r\n    }}\r\n    />\r\n  );\r\n}\r\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order:Order;\r\n    setSelectedOrder:(id: number) => void;\r\n}\r\n\r\n\r\nexport default function OrderDetailed ({order, setSelectedOrder}: Props){\r\n    const subtotal = order.ordemItems.reduce((sum,item) => sum + (item.quantity * item.price ),0) ?? 0;\r\n    return (\r\n        <>\r\n           <Box display='flex' justifyContent='space-between'>\r\n              <Typography sx={{p:2}} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>  \r\n              <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n          </Box> \r\n          <BasketTable items={order.ordemItems as BasketItem[]} isBasket={false} />\r\n          <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n          </Grid>\r\n        </>\r\n    )\r\n\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\"\r\nimport { useEffect, useState } from \"react\"\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport {Order} from \"../../app/models/order\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport OrderDetailed from \"./OrderDetailed\";\r\n\r\nexport default function Orders (){\r\n    const[orders,setOrders] = useState<Order[] | null>(null);\r\n    const[loading,setLoading] = useState(true);\r\n    const[selectedOrderNumber,setSelectedOrderNumber] = useState(0);\r\n\r\n   useEffect(() => {\r\n       setLoading(true);\r\n       agent.Orders.list()\r\n       .then(orders =>  setOrders(orders))\r\n       .catch(error => console.log(error))\r\n       .finally(() => setLoading(false))\r\n   },[])\r\n\r\n   if(loading) return <LoadingComponent message='Loading orders...'/>\r\n\r\n   if(selectedOrderNumber > 0) return (\r\n       <OrderDetailed \r\n         order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n         setSelectedOrder={setSelectedOrderNumber}\r\n       />\r\n   )\r\n\r\n\r\n    return  (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                <TableRow>\r\n                    <TableCell>Order number</TableCell>\r\n                    <TableCell align=\"right\">Total</TableCell>\r\n                    <TableCell align=\"right\">Order Date</TableCell>\r\n                    <TableCell align=\"right\">Order Status</TableCell>\r\n                    <TableCell align=\"right\"></TableCell>\r\n                </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {orders?.map((order) => (\r\n                    <TableRow\r\n                    key={order.id}\r\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    >\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                        {order.id}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                    <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                    <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                     <TableCell align=\"right\" >\r\n                         <Button onClick={() => setSelectedOrderNumber(order.id)} >View</Button>\r\n                     </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n            </TableContainer>\r\n    )\r\n}","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\"\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n    return (\r\n        <FormControlLabel \r\n            control={\r\n                <Checkbox \r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}","import { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''})\r\n    return (\r\n        <TextField \r\n            {...props}\r\n            {...field}\r\n            multiline={props.multiline}\r\n            rows={props.rows}\r\n            type={props.type}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport {  useFormContext } from 'react-hook-form';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\n\r\n\r\n\r\n\r\nexport default function AddressForm() {\r\n  const { control,formState  } = useFormContext();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} >\r\n           <AppTextInput control={control} name='fullName' label='Full name' />\r\n        </Grid>\r\n        {/* <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} name='lastName' label='Last Name' />      \r\n        </Grid> */}\r\n        <Grid item xs={12}>\r\n            <AppTextInput control={control} name='address1' label = 'Address 1' />   \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <AppTextInput control={control} name='address2' label='Address Line 2' />      \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} name ='city' label='City' />       \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} name='state' label='State'/> \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} name='zip' label='Zip'/>        \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n            <AppTextInput control={control} name='country' label='Country' />       \r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckbox\r\n            name='saveAddress' \r\n            disabled={!formState.isDirty}\r\n            label='Save this as the default address'\r\n            control={control} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n\r\n  );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, \r\n    ref: Ref<unknown>){\r\n        const elementRef = useRef<any>();\r\n\r\n        useImperativeHandle(ref, () => ({\r\n            focus: () => elementRef.current.focus\r\n        }));\r\n\r\n        return (\r\n            <Component \r\n                onReady={(element: any) => elementRef.current = element}\r\n                {...props}\r\n            />\r\n        )\r\n    });","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\n\r\ninterface Props{\r\n  cardState: {elementError:{[key in StripeElementType]?:string}};\r\n  onCardInputChange : (event:any) => void;\r\n}\r\n\r\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\r\n  const {control} = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput name='nameOnCard' label='Name on card' control={control}/>\r\n          {}\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n     \r\n          <TextField\r\n           onChange={onCardInputChange}\r\n           error={!!cardState.elementError.cardNumber}\r\n           helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{shrink:true}}\r\n            InputProps={{\r\n               inputComponent : StripeInput,\r\n               inputProps:{\r\n                 component: CardNumberElement                   \r\n               }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{shrink:true}}\r\n            InputProps={{\r\n              inputComponent : StripeInput,\r\n              inputProps:{\r\n                component: CardExpiryElement                   \r\n              }\r\n           }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"     \r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{shrink:true}}\r\n            InputProps={{\r\n               inputComponent : StripeInput,\r\n               inputProps:{\r\n                 component: CardCvcElement                   \r\n               }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import { Grid } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\n\r\nexport default function Review() {\r\n  const {basket} = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n     <Typography variant=\"h6\" gutterBottom >\r\n       Order summary \r\n     </Typography>\r\n     {basket && \r\n     <BasketTable items={basket.items} isBasket={false} />}\r\n     <Grid container>\r\n         <Grid item xs={6} />         \r\n         <Grid item xs={6} >\r\n            <BasketSummary/>          \r\n         </Grid>       \r\n     </Grid>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Address line 1 is required'),\r\n        address2: yup.string().required(),\r\n        city: yup.string().required(),\r\n        state: yup.string().required(),\r\n        zip: yup.string().required(),\r\n        country: yup.string().required(),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required()\r\n    })\r\n] \r\n","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {  FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport {yupResolver} from '@hookform/resolvers/yup';\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\n\r\n\r\n\r\nexport default function CheckoutPage() {\r\n \r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const[orderNumber,setOrderNumber] = useState(0);\r\n    const[loading,setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n    const[cardState,setCardState] = useState<{elementError:{[key in StripeElementType]?:string}}>({elementError:{}})\r\n    const [cardComplete,setCardComplete]  = useState<any>({cardNumber:false, cardExpiry:false,cardCvc:false});\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const[paymentSucceeded,setPaymentSucceeded] = useState(false);\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    \r\n    function onCardInputChange(event: any){\r\n      setCardState ({\r\n        ...cardState,\r\n        elementError: {\r\n          ...cardState.elementError,\r\n          [event.elementType]:  event.error?.message\r\n        }\r\n      })\r\n      setCardComplete({...cardComplete, [event.elementType]: event.complete});\r\n    }\r\n  \r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                 return <AddressForm/>;\r\n            case 1:          \r\n                return <Review/>;\r\n            case 2:    \r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                console.log(step,'26');\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n    \r\n\r\n    const methods = useForm({\r\n        mode:'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n        .then(response => {\r\n            if(response){\r\n                methods.reset({...methods.getValues(),...response,saveAddress: false})\r\n            }\r\n        })\r\n    },[methods])\r\n\r\n   async function submitOrder(data: FieldValues){\r\n        setLoading(true);\r\n        const{nameOnCard,saveAddress,...shippingAddress} = data;\r\n        if(!stripe || !elements) return ; //stripe is not ready\r\n        try\r\n        {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!,{\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details : {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if(paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({saveAddress,shippingAddress});\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you -we have received your payment');\r\n                setActiveStep(activeStep+1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            }else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep+1);\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n            setLoading(false);\r\n\r\n        }\r\n\r\n   } \r\n\r\n\r\n    const handleNext = async (data:FieldValues) => {       \r\n        if(activeStep ===  steps.length-1 ) {\r\n            await submitOrder(data);\r\n        }else {\r\n            setActiveStep(activeStep+1);\r\n        }      \r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if(activeStep === steps.length -1){\r\n            return !cardComplete.cardCvc \r\n            || !cardComplete.cardExpiry \r\n            || !cardComplete.cardNumber\r\n            || !methods.formState.isValid\r\n        }else{\r\n            return !methods.formState.isValid\r\n        }\r\n    }\r\n\r\n    return (\r\n     <FormProvider {...methods}>\r\n        <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                Checkout\r\n            </Typography>\r\n            <Stepper activeStep={activeStep} sx={{pt: 3, pb: 5}}>\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <>\r\n                {activeStep === steps.length ? (\r\n                    <>\r\n                        <Typography variant=\"h5\" gutterBottom>\r\n                            {paymentMessage}\r\n                           \r\n                        </Typography>\r\n                        {paymentSucceeded ? (\r\n                            <Typography variant=\"subtitle1\">\r\n                            Your order number is #{orderNumber}. We have not emailed your order\r\n                            confirmation, and will send you an update when your order has\r\n                            shipped as this is a fake store.\r\n                        </Typography>\r\n                        ) : (\r\n                            <Button variant='contained' onClick={handleBack}>\r\n                                 Go back and try again\r\n                            </Button>\r\n                        )}\r\n                        \r\n                    </>\r\n                ) : (\r\n                    <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                        {getStepContent(activeStep)}\r\n                        <Box sx={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                            {activeStep !== 0 && (\r\n                                <Button onClick={handleBack} sx={{mt: 3, ml: 1}}>\r\n                                    Back\r\n                                </Button>\r\n                            )}\r\n                            <LoadingButton\r\n                                loading={loading}\r\n                                disabled ={submitDisabled()}\r\n                                variant=\"contained\"\r\n                                type ='submit'\r\n                                //onClick={handleNext}\r\n                                sx={{mt: 3, ml: 1}}\r\n                            >\r\n                                {\r\n                                   \r\n                                  activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                            </LoadingButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </>\r\n        </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\n\r\nconst stripePromise = loadStripe(\"pk_test_51Kr54cDcyK1bL0GIGOHWiLCoz8NksB0pZ9rcGh3ylpbEzKpzWPKeyvEYZ2SnpCZDBZ2amlFGLXSu3dYeq8v8aFLd00MlV7kAkf\")\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const[loading,setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n        .then(basket => dispatch(setBasket(basket)))    \r\n        .catch(error => console.log(error))\r\n        .finally(() => setLoading(false))\r\n    },[dispatch]);\r\n\r\n    if(loading) return <LoadingComponent message=\"Loading checkout...\" />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}","import { ThemeProvider } from \"@emotion/react\";\r\nimport { Container, createTheme, CssBaseline } from \"@mui/material\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport AboutPage from \"../../features/about/AboutPage\";\r\nimport Catalog from \"../../features/catalog/Catalog\";\r\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\r\nimport ContactPage from \"../../features/contact/ContactPage\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport Header from \"./Header\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport BasketPage from \"../../features/basket/BasketPage\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport { useAppDispatch } from \"../store/configureStore\";\r\nimport {fetchBasketAsync} from \"../../features/basket/basketSlice\";\r\nimport Login from \"../../features/account/Login\";\r\nimport Register from \"../../features/account/Register\";\r\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport Order from \"../../features/orders/Order\";\r\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\r\n\r\n\r\nfunction App () {\r\n  const dispatch = useAppDispatch();\r\n  const[loading, setLoading] = useState(true);\r\n\r\n\r\n  \r\n  const initApp = useCallback(async () => {\r\n    try {\r\n        await dispatch(fetchCurrentUser());\r\n        await dispatch(fetchBasketAsync());\r\n    }catch(error :  any){\r\n      console.log(error);\r\n    }\r\n  },[dispatch])\r\n\r\n// useEffect(() => {\r\n//   const buyerId = getcookie('buyerId');\r\n//   dispatch(fetchCurrentUser());\r\n//   if(buyerId) {\r\n//     agent.Basket.get()\r\n//     .then(basket => dispatch(setBasket(basket)))\r\n//     .catch(error => console.log(error))\r\n//     .finally( () => setLoading(false));\r\n//   }else {\r\n//     setLoading(false);\r\n//   }\r\n// }, [dispatch])\r\n\r\nuseEffect(() => {\r\n  initApp().then( () => setLoading(false)); \r\n}, [initApp])\r\n\r\n  const [darkMode,setDarkMode] = useState(false);\r\n  const paletteType = darkMode? 'dark' : 'light'; \r\n  const theme = createTheme({\r\n    palette:{\r\n      mode: paletteType,\r\n      background:{\r\n        default: paletteType === 'light'? '#aeeaea' :'#121212'\r\n      }\r\n    }\r\n  })\r\n\r\nfunction handleThemeChange(){\r\n  setDarkMode(!darkMode);\r\n}\r\n\r\nif(loading) return <LoadingComponent message='Initialising app...'/>\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} >\r\n       <ToastContainer position='bottom-right' hideProgressBar theme='colored' />\r\n       <CssBaseline/>\r\n       <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n       <Route exact path='/'            component={HomePage}  /> \r\n       <Route path={'/(.+)'} render={() => (\r\n        <Container sx={{ mt:4}}>              \r\n            <Route exact path='/catalog'     component={Catalog}  />\r\n            <Route exact path='/catalog/:id' component={ProductDetails}  />\r\n            <Route exact path='/about'       component={AboutPage}  />\r\n            <Route exact path='/contact'     component={ContactPage}  />\r\n            <Route exact path='/basket'      component={BasketPage} />\r\n            <PrivateRoute path='/checkout'   component={CheckoutWrapper} /> \r\n            <PrivateRoute path='/orders'     component={Order} />\r\n            <Route path='/login'             component={Login} /> \r\n            <Route path='/register'          component={Register} /> \r\n        </Container>\r\n       )} />\r\n     \r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/configureStore';\r\nimport { createBrowserHistory } from 'history';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter> \r\n     <Provider store={store}>\r\n     <App />\r\n     </Provider>   \r\n    </BrowserRouter>    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}